{
  "jsonrpc": "2.0",
  "id": 6,
  "method": "tools/call",
  "params": {
    "name": "python-code-runner",
    "arguments": {
      "code": "import nltk\nimport re\nimport string\nfrom sklearn.feature_extraction.text import CountVectorizer\n\nemail_content = \"\"\"*Why do you want to join us?*\\nI want to join WeDoGood because I deeply resonate with your mission of\\nusing technology to empower under-resourced organizations and individuals.\\nBuilding solutions that create real social impact excites me, and I believe\\nmy full-stack skills in *React.js, Next.js, Node.js, and PostgreSQL* can\\nhelp scale your platform while ensuring a seamless user experience.\\n------------------------------\\n\\n*Why makes you a suitable candidate for this role?*\\nI have hands-on experience developing end-to-end solutions, from designing\\nresponsive UIs with *React/Next.js* to building scalable backend services\\nwith *Node.js and SQL databases*. My projects, such as an *AI-powered\\ncareer platform* and a *conversational BI agent*, highlight my ability to\\ntake ownership, optimize performance, and deliver impactful results. I am\\neager to apply these skills to build purposeful technology at WeDoGood.\"\"\"\n\n# Download necessary NLTK data (if not already downloaded)\ntry:\n    nltk.data.find('corpora/stopwords')\nexcept nltk.downloader.DownloadError:\n    nltk.download('stopwords')\n\n# Clean email content\ncleaned_content = email_content.lower()\ncleaned_content = re.sub(f\"[{re.escape(string.punctuation)}]\", \"\", cleaned_content)\nstop_words = set(nltk.corpus.stopwords.words('english'))\ncleaned_content = \" \".join([word for word in cleaned_content.split() if word not in stop_words])\n\n# Keyword extraction\nvectorizer = CountVectorizer(max_features=5)\nvectorizer.fit([cleaned_content])\nkeywords = vectorizer.get_feature_names_out()\n\n# Simplified categorization and triage\ncategory = \"general_inquiry\"\nsummary = \"Applicant interested in WeDoGood's mission and skilled in React.js, Next.js, Node.js, and PostgreSQL. Highlights AI-powered career platform and conversational BI agent experience.\"\npriority = \"normal\"\nreason = \"The applicant's skills align with the company's mission and technology stack.\"\n\n\n# Format the output as a JSON string\noutput_json = {\n    \"category\": category,\n    \"summary\": summary,\n    \"priority\": priority,\n    \"reason\": reason,\n    \"email_date\": \"09/24/2025, 04:36 AM\",\n    \"email_from\": \"ancdominater@gmail.com\",\n    \"email_subject\": \"job position\"\n}\n\nimport json\nprint(json.dumps(output_json))"
    }
  }
}